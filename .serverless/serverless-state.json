{
  "service": {
    "service": "otp-friend",
    "serviceObject": {
      "name": "otp-friend"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.9",
      "region": "ap-southeast-2",
      "stage": "dev",
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "OtpDashstoreDashlambdaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/otp-friend-dev-otp-store-lambda"
            }
          },
          "OtpDashstoreDashoktaDashlambdaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/otp-friend-dev-otp-store-okta-lambda"
            }
          },
          "OtpDashgetDashlambdaLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/otp-friend-dev-otp-get-lambda"
            }
          },
          "OtpDashstoreDashlambdaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/otp-friend/dev/1716105609449-2024-05-19T08:00:09.449Z/otp-friend.zip"
              },
              "Handler": "otp_handler.save_otp",
              "Runtime": "python3.9",
              "FunctionName": "otp-friend-dev-otp-store-lambda",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PYTHONPATH": "./src"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "OTPLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "OtpDashstoreDashlambdaLogGroup",
              "OTPLambdaRole"
            ]
          },
          "OtpDashstoreDashoktaDashlambdaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/otp-friend/dev/1716105609449-2024-05-19T08:00:09.449Z/otp-friend.zip"
              },
              "Handler": "otp_handler.save_otp_okta",
              "Runtime": "python3.9",
              "FunctionName": "otp-friend-dev-otp-store-okta-lambda",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PYTHONPATH": "./src"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "OTPLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "OtpDashstoreDashoktaDashlambdaLogGroup",
              "OTPLambdaRole"
            ]
          },
          "OtpDashgetDashlambdaLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/otp-friend/dev/1716105609449-2024-05-19T08:00:09.449Z/otp-friend.zip"
              },
              "Handler": "otp_handler.get_otp",
              "Runtime": "python3.9",
              "FunctionName": "otp-friend-dev-otp-get-lambda",
              "MemorySize": 1024,
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "PYTHONPATH": "./src"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "OTPLambdaRole",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "OtpDashgetDashlambdaLogGroup",
              "OTPLambdaRole"
            ]
          },
          "OtpDashstoreDashlambdaLambdaVersionpAwKhOYY7YzLQ7NbQvYei9XRcWBgdWrqDRPs02MiL4": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OtpDashstoreDashlambdaLambdaFunction"
              },
              "CodeSha256": "jZ3dhmDDzKGU2jumS1mvPJbwxYDfXd6DAfKnOHPox6E="
            }
          },
          "OtpDashstoreDashoktaDashlambdaLambdaVersionraSFJCTOx8eyCFuSOWyLNMOHY9HD2zJJRNzD8c0NgM": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OtpDashstoreDashoktaDashlambdaLambdaFunction"
              },
              "CodeSha256": "jZ3dhmDDzKGU2jumS1mvPJbwxYDfXd6DAfKnOHPox6E="
            }
          },
          "OtpDashgetDashlambdaLambdaVersionzHJgES8PpJKu5GuW0mGYrGGNERFCx1mgroo07BCuc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "OtpDashgetDashlambdaLambdaFunction"
              },
              "CodeSha256": "jZ3dhmDDzKGU2jumS1mvPJbwxYDfXd6DAfKnOHPox6E="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-otp-friend",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourceOtp": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "otp",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOtpKeyVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourceOtp"
              },
              "PathPart": "{key}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourceOtpokta": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "otp_okta",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodOtpPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOtp"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OtpDashstoreDashlambdaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayOtpfriendRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodOtpPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "OtpDashstoreDashlambdaLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodOtpoktaPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOtpokta"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OtpDashstoreDashoktaDashlambdaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": [],
              "RequestValidatorId": {
                "Ref": "ApiGatewayOtpfriendRequestValidator"
              },
              "RequestModels": {
                "application/json": {
                  "Ref": "ApiGatewayMethodOtpoktaPostApplicationJsonModel"
                }
              }
            },
            "DependsOn": [
              "OtpDashstoreDashoktaDashlambdaLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodOtpKeyVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceOtpKeyVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "OtpDashgetDashlambdaLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "OtpDashgetDashlambdaLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayOtpfriendRequestValidator": {
            "Type": "AWS::ApiGateway::RequestValidator",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ValidateRequestBody": true,
              "ValidateRequestParameters": true,
              "Name": "otp-friend-dev | Validate request body and querystring parameters"
            }
          },
          "ApiGatewayMethodOtpPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                  "otp_key": {
                    "type": "string",
                    "minLength": 1
                  },
                  "otp_data": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "otp_key",
                  "otp_data"
                ]
              }
            }
          },
          "ApiGatewayMethodOtpoktaPostApplicationJsonModel": {
            "Type": "AWS::ApiGateway::Model",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ContentType": "application/json",
              "Schema": {
                "$schema": "http://json-schema.org/draft-04/schema#",
                "properties": {
                  "otp_key": {
                    "type": "string",
                    "minLength": 1
                  },
                  "otp_data": {
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "otp_key",
                  "otp_data"
                ]
              }
            }
          },
          "ApiGatewayDeployment1716105607452": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodOtpPost",
              "ApiGatewayMethodOtpoktaPost",
              "ApiGatewayMethodOtpKeyVarGet"
            ]
          },
          "OtpDashstoreDashlambdaLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OtpDashstoreDashlambdaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "OtpDashstoreDashoktaDashlambdaLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OtpDashstoreDashoktaDashlambdaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "OtpDashgetDashlambdaLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "OtpDashgetDashlambdaLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "otpStoreTableResource": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "TableName": "otpStore",
              "TimeToLiveSpecification": {
                "AttributeName": "expiration_timestamp",
                "Enabled": true
              },
              "BillingMode": "PAY_PER_REQUEST",
              "AttributeDefinitions": [
                {
                  "AttributeName": "otp_key",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "otp_key",
                  "KeyType": "HASH"
                }
              ]
            }
          },
          "OTPLambdaRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "RoleName": "otp-lambda-role",
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "lambda.amazonaws.com"
                    },
                    "Action": "sts:AssumeRole"
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": "otp-lambda-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:PutItem",
                          "dynamodb:GetItem",
                          "dynamodb:UpdateItem",
                          "dynamodb:DeleteItem",
                          "dynamodb:Query",
                          "dynamodb:Scan"
                        ],
                        "Resource": [
                          {
                            "Fn::GetAtt": [
                              "otpStoreTableResource",
                              "Arn"
                            ]
                          },
                          {
                            "Fn::Join": [
                              "/",
                              [
                                {
                                  "Fn::GetAtt": [
                                    "otpStoreTableResource",
                                    "Arn"
                                  ]
                                },
                                "index/*"
                              ]
                            ]
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "arn:aws:logs:*:*:*"
                      }
                    ]
                  }
                }
              ]
            }
          },
          "ConsumerUser": {
            "Type": "AWS::IAM::User",
            "Properties": {
              "UserName": "otp-consumer-user",
              "Policies": [
                {
                  "PolicyName": "otp-consumer-policy",
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "apigateway:Invoke",
                          "apigateway:POST",
                          "apigateway:GET"
                        ],
                        "Resource": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:aws:execute-api:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":",
                              {
                                "Ref": "AWS::AccountId"
                              },
                              ":",
                              {
                                "Ref": "ApiGatewayRestApi"
                              },
                              "/*"
                            ]
                          ]
                        }
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogGroup",
                          "logs:CreateLogStream",
                          "logs:PutLogEvents"
                        ],
                        "Resource": "arn:aws:logs:*:*:*"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-otp-friend-dev-ServerlessDeploymentBucketName"
            }
          },
          "OtpDashstoreDashlambdaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OtpDashstoreDashlambdaLambdaVersionpAwKhOYY7YzLQ7NbQvYei9XRcWBgdWrqDRPs02MiL4"
            },
            "Export": {
              "Name": "sls-otp-friend-dev-OtpDashstoreDashlambdaLambdaFunctionQualifiedArn"
            }
          },
          "OtpDashstoreDashoktaDashlambdaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OtpDashstoreDashoktaDashlambdaLambdaVersionraSFJCTOx8eyCFuSOWyLNMOHY9HD2zJJRNzD8c0NgM"
            },
            "Export": {
              "Name": "sls-otp-friend-dev-OtpDashstoreDashoktaDashlambdaLambdaFunctionQualifiedArn"
            }
          },
          "OtpDashgetDashlambdaLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "OtpDashgetDashlambdaLambdaVersionzHJgES8PpJKu5GuW0mGYrGGNERFCx1mgroo07BCuc"
            },
            "Export": {
              "Name": "sls-otp-friend-dev-OtpDashgetDashlambdaLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-otp-friend-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "scripts": {
        "hooks": {
          "deploy:finalize": "karate/refresh_urls.sh"
        }
      }
    },
    "plugins": [
      "serverless-plugin-scripts"
    ],
    "pluginsData": {},
    "functions": {
      "otp-store-lambda": {
        "handler": "otp_handler.save_otp",
        "environment": {
          "PYTHONPATH": "./src"
        },
        "events": [
          {
            "http": {
              "path": "otp",
              "method": "post",
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodOtpPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "role": "OTPLambdaRole",
        "name": "otp-friend-dev-otp-store-lambda",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "OtpDashstoreDashlambdaLambdaVersionpAwKhOYY7YzLQ7NbQvYei9XRcWBgdWrqDRPs02MiL4"
      },
      "otp-store-okta-lambda": {
        "handler": "otp_handler.save_otp_okta",
        "environment": {
          "PYTHONPATH": "./src"
        },
        "events": [
          {
            "http": {
              "path": "otp_okta",
              "method": "post",
              "request": {
                "schemas": {
                  "application/json": {
                    "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiGatewayMethodOtpoktaPostApplicationJsonModel\"][\"Properties\"][\"Schema\"]"
                  }
                }
              },
              "integration": "AWS_PROXY"
            }
          }
        ],
        "role": "OTPLambdaRole",
        "name": "otp-friend-dev-otp-store-okta-lambda",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "OtpDashstoreDashoktaDashlambdaLambdaVersionraSFJCTOx8eyCFuSOWyLNMOHY9HD2zJJRNzD8c0NgM"
      },
      "otp-get-lambda": {
        "handler": "otp_handler.get_otp",
        "environment": {
          "PYTHONPATH": "./src"
        },
        "events": [
          {
            "http": {
              "path": "otp/{key}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "role": "OTPLambdaRole",
        "name": "otp-friend-dev-otp-get-lambda",
        "package": {},
        "memory": 1024,
        "timeout": 6,
        "runtime": "python3.9",
        "vpc": {},
        "versionLogicalId": "OtpDashgetDashlambdaLambdaVersionzHJgES8PpJKu5GuW0mGYrGGNERFCx1mgroo07BCuc"
      }
    },
    "resources": {
      "Resources": {
        "otpStoreTableResource": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "TableName": "otpStore",
            "TimeToLiveSpecification": {
              "AttributeName": "expiration_timestamp",
              "Enabled": true
            },
            "BillingMode": "PAY_PER_REQUEST",
            "AttributeDefinitions": [
              {
                "AttributeName": "otp_key",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "otp_key",
                "KeyType": "HASH"
              }
            ]
          }
        },
        "OTPLambdaRole": {
          "Type": "AWS::IAM::Role",
          "Properties": {
            "RoleName": "otp-lambda-role",
            "AssumeRolePolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "lambda.amazonaws.com"
                  },
                  "Action": "sts:AssumeRole"
                }
              ]
            },
            "Policies": [
              {
                "PolicyName": "otp-lambda-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "dynamodb:PutItem",
                        "dynamodb:GetItem",
                        "dynamodb:UpdateItem",
                        "dynamodb:DeleteItem",
                        "dynamodb:Query",
                        "dynamodb:Scan"
                      ],
                      "Resource": [
                        {
                          "Fn::GetAtt": [
                            "otpStoreTableResource",
                            "Arn"
                          ]
                        },
                        {
                          "Fn::Join": [
                            "/",
                            [
                              {
                                "Fn::GetAtt": [
                                  "otpStoreTableResource",
                                  "Arn"
                                ]
                              },
                              "index/*"
                            ]
                          ]
                        }
                      ]
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "arn:aws:logs:*:*:*"
                    }
                  ]
                }
              }
            ]
          }
        },
        "ConsumerUser": {
          "Type": "AWS::IAM::User",
          "Properties": {
            "UserName": "otp-consumer-user",
            "Policies": [
              {
                "PolicyName": "otp-consumer-policy",
                "PolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Action": [
                        "apigateway:Invoke",
                        "apigateway:POST",
                        "apigateway:GET"
                      ],
                      "Resource": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:aws:execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*"
                          ]
                        ]
                      }
                    },
                    {
                      "Effect": "Allow",
                      "Action": [
                        "logs:CreateLogGroup",
                        "logs:CreateLogStream",
                        "logs:PutLogEvents"
                      ],
                      "Resource": "arn:aws:logs:*:*:*"
                    }
                  ]
                }
              }
            ]
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "otp-friend",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "package": {
        "patterns": [
          "!test/**",
          "!target/**",
          "!.vscode/**"
        ],
        "artifactsS3KeyDirname": "serverless/otp-friend/dev/code-artifacts",
        "artifact": "/workspaces/otp-friend/.serverless/otp-friend.zip",
        "artifactDirectoryName": "serverless/otp-friend/dev/1716105609449-2024-05-19T08:00:09.449Z"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/workspaces/otp-friend/.serverless/otp-friend.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/otp-friend/dev/1716105609449-2024-05-19T08:00:09.449Z",
    "artifact": "otp-friend.zip"
  }
}